import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Skeleton } from "@/components/ui/skeleton";
import { useQuery } from "@tanstack/react-query";
import { 
  Eye, 
  Shield, 
  Activity, 
  AlertTriangle, 
  CheckCircle, 
  Clock,
  Target,
  TrendingUp,
  Database,
  Network,
  Settings,
  BarChart3,
  Zap,
  Server,
  Monitor,
  Bot,
  ExternalLink,
  AlertCircle
} from "lucide-react";
import { useAuth } from "@/hooks/useAuth";

export default function MonitoringVulnerability() {
  const { user } = useAuth();

  // Fetch vulnerability intelligence data
  const { data: nistData, isLoading: nistLoading } = useQuery({
    queryKey: ['/api/vulnerabilities/nist'],
  }) as { data: any, isLoading: boolean };

  const { data: cveData, isLoading: cveLoading } = useQuery({
    queryKey: ['/api/vulnerabilities/cve'],
  }) as { data: any, isLoading: boolean };

  const { data: cisaKevData, isLoading: cisaKevLoading } = useQuery({
    queryKey: ['/api/vulnerabilities/cisa-kev'],
  }) as { data: any, isLoading: boolean };
  
  const monitoringMetrics = [
    { metric: "Endpoints Monitored", value: "12,847", description: "Across all connected systems" },
    { metric: "Uptime Guarantee", value: "99.9%", description: "Service availability SLA" },
    { metric: "Detection Time", value: "< 2 min", description: "Average threat detection" },
    { metric: "Vulnerability Coverage", value: "98.4%", description: "Known CVE detection rate" }
  ];

  const monitoringCapabilities = [
    {
      title: "Continuous Endpoint Monitoring",
      description: "24/7 real-time monitoring of all endpoints including workstations, servers, and mobile devices",
      coverage: 99.7,
      features: ["Real-time agent monitoring", "System health tracking", "Performance metrics", "Security status"],
      icon: <Monitor className="w-6 h-6" />,
      color: "text-cyan-400"
    },
    {
      title: "Vulnerability Scanning",
      description: "Automated vulnerability assessment with prioritized remediation recommendations",
      coverage: 94.2,
      features: ["Daily vulnerability scans", "Risk-based prioritization", "Patch management", "Compliance mapping"],
      icon: <Target className="w-6 h-6" />,
      color: "text-orange-400"
    }
  ];

  return (
    <div className="ai-dashboard-bg min-h-screen p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header Section */}
        <header className="mb-8">
          <div className="flex items-center space-x-4 mb-6">
            <div className="w-12 h-12 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-lg flex items-center justify-center">
              <Eye className="w-6 h-6 text-white" />
            </div>
            <div>
              <div className="flex items-center space-x-3 mb-2">
                <h1 className="text-4xl font-bold text-white">24/7 Monitoring & Vulnerability Management</h1>
                <Badge className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white">24/7</Badge>
              </div>
              <p className="text-gray-300 text-lg">
                Around-the-clock vulnerability detection and remediation for all endpoints
              </p>
            </div>
          </div>

          <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
            {monitoringMetrics.map((metric, index) => (
              <div key={index} className="bg-surface/50 rounded-lg p-4 border border-surface-light">
                <div className="text-2xl font-bold text-white mb-1">{metric.value}</div>
                <div className="text-sm text-gray-400 mb-1">{metric.metric}</div>
                <div className="text-xs text-cyan-400">{metric.description}</div>
              </div>
            ))}
          </div>

          <div className="flex items-center space-x-4">
            <Badge variant="outline" className="text-cyan-400 border-cyan-400/50">
              Custom pricing available
            </Badge>
            <Badge variant="outline" className="text-green-400 border-green-400/50">
              Continuous monitoring
            </Badge>
            <Badge variant="outline" className="text-purple-400 border-purple-400/50">
              Automated remediation
            </Badge>
          </div>
        </header>

        {/* Comprehensive Monitoring Capabilities */}
        <section className="mb-8">
          <h2 className="text-3xl font-bold text-white mb-8 flex items-center">
            <Activity className="w-8 h-8 mr-3 text-cyan-400" />
            Comprehensive Monitoring Capabilities
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {monitoringCapabilities.map((capability, index) => (
              <Card key={index} className="bg-surface/50 border-surface-light">
                <CardHeader>
                  <div className="flex items-center space-x-3 mb-4">
                    <div className={`${capability.color}`}>{capability.icon}</div>
                    <CardTitle className="text-white text-xl">{capability.title}</CardTitle>
                  </div>
                  <p className="text-gray-400">{capability.description}</p>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-400">Coverage Rate</span>
                      <span className="text-sm font-semibold text-white">{capability.coverage}%</span>
                    </div>
                    <Progress value={capability.coverage} className="h-2" />
                    <div className="space-y-2 pt-2 border-t border-surface-light">
                      {capability.features.map((feature, featureIndex) => (
                        <div key={featureIndex} className="flex items-center space-x-2">
                          <CheckCircle className="w-3 h-3 text-green-400 flex-shrink-0" />
                          <span className="text-gray-300 text-sm">{feature}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* Live Vulnerability Intelligence Feeds */}
        <section className="mb-8">
          <h2 className="text-3xl font-bold text-white mb-8 flex items-center">
            <Shield className="w-8 h-8 mr-3 text-red-400" />
            Live Vulnerability Intelligence Feeds
            <Badge className="ml-4 bg-green-500/20 text-green-400 border-green-500/50">
              Real-time
            </Badge>
          </h2>

          {/* Intelligence Overview Cards */}
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
            <Card className="bg-gradient-to-br from-blue-500/10 to-cyan-500/10 border-blue-400/30">
              <CardContent className="p-6 text-center">
                <Database className="w-8 h-8 mx-auto mb-3 text-blue-400" />
                <div className="text-2xl font-bold text-white mb-1">
                  {nistLoading ? <Skeleton className="h-8 w-16 mx-auto" /> : nistData?.totalVulnerabilities?.toLocaleString() || '0'}
                </div>
                <div className="text-sm text-blue-400">NIST Total CVEs</div>
                <div className="text-xs text-gray-400 mt-2">
                  {nistLoading ? <Skeleton className="h-3 w-20 mx-auto" /> : `+${nistData?.recentVulnerabilities || 0} recent`}
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-orange-500/10 to-yellow-500/10 border-orange-400/30">
              <CardContent className="p-6 text-center">
                <Target className="w-8 h-8 mx-auto mb-3 text-orange-400" />
                <div className="text-2xl font-bold text-white mb-1">
                  {cveLoading ? <Skeleton className="h-8 w-16 mx-auto" /> : cveData?.exploitableCount?.toLocaleString() || '0'}
                </div>
                <div className="text-sm text-orange-400">Exploitable CVEs</div>
                <div className="text-xs text-gray-400 mt-2">
                  {cveLoading ? <Skeleton className="h-3 w-20 mx-auto" /> : `${cveData?.newThisMonth || 0} new this month`}
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-red-500/10 to-pink-500/10 border-red-400/30">
              <CardContent className="p-6 text-center">
                <AlertTriangle className="w-8 h-8 mx-auto mb-3 text-red-400" />
                <div className="text-2xl font-bold text-white mb-1">
                  {cisaKevLoading ? <Skeleton className="h-8 w-16 mx-auto" /> : cisaKevData?.totalKnownExploited?.toLocaleString() || '0'}
                </div>
                <div className="text-sm text-red-400">CISA KEV Total</div>
                <div className="text-xs text-gray-400 mt-2">
                  {cisaKevLoading ? <Skeleton className="h-3 w-20 mx-auto" /> : `${cisaKevData?.newThisWeek || 0} new this week`}
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-purple-500/10 to-indigo-500/10 border-purple-400/30">
              <CardContent className="p-6 text-center">
                <AlertCircle className="w-8 h-8 mx-auto mb-3 text-purple-400" />
                <div className="text-2xl font-bold text-white mb-1">
                  {cisaKevLoading ? <Skeleton className="h-8 w-16 mx-auto" /> : cisaKevData?.emergencyDirectives || '0'}
                </div>
                <div className="text-sm text-purple-400">Emergency Actions</div>
                <div className="text-xs text-gray-400 mt-2">Requires immediate action</div>
              </CardContent>
            </Card>
          </div>

          {/* Threat Intelligence Feeds */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
            {/* NIST Recent Critical Vulnerabilities */}
            <Card className="bg-surface/50 border-surface-light">
              <CardHeader className="border-b border-surface-light">
                <div className="flex items-center justify-between">
                  <CardTitle className="text-white flex items-center">
                    <Database className="w-5 h-5 mr-2 text-blue-400" />
                    NIST Critical Vulnerabilities
                  </CardTitle>
                  <Badge variant="outline" className="text-blue-400 border-blue-400/50">
                    Latest
                  </Badge>
                </div>
                <div className="text-sm text-gray-400">Real-time feed from National Vulnerability Database</div>
              </CardHeader>
              <CardContent className="p-0">
                {nistLoading ? (
                  <div className="p-4 space-y-4">
                    {[1, 2, 3].map((i) => (
                      <div key={i} className="space-y-2">
                        <Skeleton className="h-4 w-24" />
                        <Skeleton className="h-3 w-full" />
                        <Skeleton className="h-3 w-32" />
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="max-h-96 overflow-y-auto">
                    {nistData?.recentCVEs?.map((cve: any, index: number) => (
                      <div key={index} className="p-4 border-b border-surface-light/50 hover:bg-surface-light/20 transition-colors">
                        <div className="flex items-start justify-between mb-2">
                          <div className="font-semibold text-blue-400 text-lg">{cve.id}</div>
                          <div className="flex items-center space-x-2">
                            <Badge 
                              variant={cve.severity === 'CRITICAL' ? 'destructive' : 'secondary'} 
                              className={`text-xs ${cve.severity === 'CRITICAL' ? 'bg-red-500/20 text-red-400' : 'bg-orange-500/20 text-orange-400'}`}
                            >
                              {cve.severity}
                            </Badge>
                            <div className="flex items-center space-x-1">
                              <div className="w-2 h-2 bg-red-400 rounded-full animate-pulse"></div>
                              <span className="text-xs text-red-400">CVSS {cve.score}</span>
                            </div>
                          </div>
                        </div>
                        <div className="text-sm text-gray-300 mb-2 line-clamp-2">{cve.description}</div>
                        <div className="flex items-center justify-between text-xs">
                          <div className="text-gray-400">
                            Affects: {cve.affectedProducts?.join(', ') || 'Multiple systems'}
                          </div>
                          <div className="text-gray-500">
                            {new Date(cve.publishedDate).toLocaleDateString()}
                          </div>
                        </div>
                      </div>
                    )) || (
                      <div className="p-4 text-center text-gray-400">
                        <Database className="w-8 h-8 mx-auto mb-2 opacity-50" />
                        <div>No recent vulnerabilities available</div>
                      </div>
                    )}
                  </div>
                )}
              </CardContent>
            </Card>

            {/* CISA Known Exploited Vulnerabilities */}
            <Card className="bg-surface/50 border-surface-light border-red-500/30">
              <CardHeader className="border-b border-red-500/20">
                <div className="flex items-center justify-between">
                  <CardTitle className="text-white flex items-center">
                    <AlertTriangle className="w-5 h-5 mr-2 text-red-400" />
                    CISA Known Exploited Vulnerabilities
                  </CardTitle>
                  <Badge variant="destructive" className="bg-red-500/20 text-red-400">
                    Active Threats
                  </Badge>
                </div>
                <div className="text-sm text-gray-400">Government-verified exploited vulnerabilities requiring immediate action</div>
              </CardHeader>
              <CardContent className="p-0">
                {cisaKevLoading ? (
                  <div className="p-4 space-y-4">
                    {[1, 2, 3].map((i) => (
                      <div key={i} className="space-y-2">
                        <Skeleton className="h-4 w-24" />
                        <Skeleton className="h-3 w-full" />
                        <Skeleton className="h-3 w-32" />
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="max-h-96 overflow-y-auto">
                    {cisaKevData?.urgentVulnerabilities?.map((vuln: any, index: number) => (
                      <div key={index} className="p-4 border-b border-red-500/10 hover:bg-red-500/5 transition-colors">
                        <div className="flex items-start justify-between mb-2">
                          <div className="font-semibold text-red-400 text-lg">{vuln.cveId}</div>
                          <div className="flex items-center space-x-2">
                            {vuln.knownRansomwareCampaignUse === 'Known' && (
                              <Badge variant="destructive" className="text-xs bg-red-600/20 text-red-300">
                                🔒 Ransomware
                              </Badge>
                            )}
                            <Badge variant="outline" className="text-xs text-red-400 border-red-400/50">
                              📅 Due: {new Date(vuln.dueDate).toLocaleDateString()}
                            </Badge>
                          </div>
                        </div>
                        <div className="text-sm font-medium text-white mb-1">{vuln.vulnerabilityName}</div>
                        <div className="text-sm text-gray-300 mb-2 line-clamp-2">{vuln.shortDescription}</div>
                        <div className="bg-orange-500/10 rounded p-2 mb-2">
                          <div className="text-xs text-orange-400 font-medium">Required Action:</div>
                          <div className="text-xs text-orange-300">{vuln.requiredAction}</div>
                        </div>
                        <div className="flex items-center justify-between text-xs">
                          <div className="text-gray-400">
                            {vuln.vendorProject} {vuln.product}
                          </div>
                          <div className="text-gray-500">
                            Added: {new Date(vuln.dateAdded).toLocaleDateString()}
                          </div>
                        </div>
                      </div>
                    )) || (
                      <div className="p-4 text-center text-gray-400">
                        <AlertTriangle className="w-8 h-8 mx-auto mb-2 opacity-50" />
                        <div>No urgent vulnerabilities available</div>
                      </div>
                    )}
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          {/* Real-time Feed Status */}
          <Card className="bg-gradient-to-r from-green-500/10 to-blue-500/10 border-green-400/30">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className="flex items-center space-x-2">
                    <div className="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
                    <span className="text-lg font-semibold text-white">Live Intelligence Feed Status</span>
                  </div>
                </div>
                <div className="flex items-center space-x-6 text-sm">
                  <div className="text-center">
                    <div className="text-green-400 font-semibold">NIST NVD</div>
                    <div className="text-xs text-gray-400">
                      {nistData?.lastUpdated ? `Updated ${new Date(nistData.lastUpdated).toLocaleTimeString()}` : 'Syncing...'}
                    </div>
                  </div>
                  <div className="text-center">
                    <div className="text-orange-400 font-semibold">CVE Details</div>
                    <div className="text-xs text-gray-400">
                      {cveData?.lastSync ? `Synced ${new Date(cveData.lastSync).toLocaleTimeString()}` : 'Syncing...'}
                    </div>
                  </div>
                  <div className="text-center">
                    <div className="text-red-400 font-semibold">CISA KEV</div>
                    <div className="text-xs text-gray-400">
                      {cisaKevData?.lastUpdated ? `Updated ${new Date(cisaKevData.lastUpdated).toLocaleTimeString()}` : 'Syncing...'}
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </section>
      </div>
    </div>
  );
}