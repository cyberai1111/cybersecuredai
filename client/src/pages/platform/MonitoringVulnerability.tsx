import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { 
  Eye, 
  Shield, 
  Activity, 
  AlertTriangle, 
  CheckCircle, 
  Clock,
  Target,
  TrendingUp,
  Database,
  Network,
  Settings,
  BarChart3,
  Zap,
  Server,
  Monitor,
  Bot
} from "lucide-react";
import { useAuth } from "@/hooks/useAuth";

export default function MonitoringVulnerability() {
  const { user } = useAuth();
  
  const monitoringMetrics = [
    { metric: "Endpoints Monitored", value: "12,847", description: "Across all connected systems" },
    { metric: "Uptime Guarantee", value: "99.9%", description: "Service availability SLA" },
    { metric: "Detection Time", value: "< 2 min", description: "Average threat detection" },
    { metric: "Vulnerability Coverage", value: "98.4%", description: "Known CVE detection rate" }
  ];

  const monitoringCapabilities = [
    {
      title: "Continuous Endpoint Monitoring",
      description: "24/7 real-time monitoring of all endpoints including workstations, servers, and mobile devices",
      coverage: 99.7,
      features: ["Real-time agent monitoring", "System health tracking", "Performance metrics", "Security status"],
      icon: <Monitor className="w-6 h-6" />,
      color: "text-cyan-400"
    },
    {
      title: "Vulnerability Scanning",
      description: "Automated vulnerability assessment with prioritized remediation recommendations",
      coverage: 94.2,
      features: ["Daily vulnerability scans", "Risk-based prioritization", "Patch management", "Compliance mapping"],
      icon: <Target className="w-6 h-6" />,
      color: "text-orange-400"
    }
  ];

  return (
    <div className="ai-dashboard-bg min-h-screen p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header Section */}
        <header className="mb-8">
          <div className="flex items-center space-x-4 mb-6">
            <div className="w-12 h-12 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-lg flex items-center justify-center">
              <Eye className="w-6 h-6 text-white" />
            </div>
            <div>
              <div className="flex items-center space-x-3 mb-2">
                <h1 className="text-4xl font-bold text-white">24/7 Monitoring & Vulnerability Management</h1>
                <Badge className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white">24/7</Badge>
              </div>
              <p className="text-gray-300 text-lg">
                Around-the-clock vulnerability detection and remediation for all endpoints
              </p>
            </div>
          </div>

          <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
            {monitoringMetrics.map((metric, index) => (
              <div key={index} className="bg-surface/50 rounded-lg p-4 border border-surface-light">
                <div className="text-2xl font-bold text-white mb-1">{metric.value}</div>
                <div className="text-sm text-gray-400 mb-1">{metric.metric}</div>
                <div className="text-xs text-cyan-400">{metric.description}</div>
              </div>
            ))}
          </div>

          <div className="flex items-center space-x-4">
            <Badge variant="outline" className="text-cyan-400 border-cyan-400/50">
              Custom pricing available
            </Badge>
            <Badge variant="outline" className="text-green-400 border-green-400/50">
              Continuous monitoring
            </Badge>
            <Badge variant="outline" className="text-purple-400 border-purple-400/50">
              Automated remediation
            </Badge>
          </div>
        </header>

        {/* Comprehensive Monitoring Capabilities */}
        <section className="mb-8">
          <h2 className="text-3xl font-bold text-white mb-8 flex items-center">
            <Activity className="w-8 h-8 mr-3 text-cyan-400" />
            Comprehensive Monitoring Capabilities
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {monitoringCapabilities.map((capability, index) => (
              <Card key={index} className="bg-surface/50 border-surface-light">
                <CardHeader>
                  <div className="flex items-center space-x-3 mb-4">
                    <div className={`${capability.color}`}>{capability.icon}</div>
                    <CardTitle className="text-white text-xl">{capability.title}</CardTitle>
                  </div>
                  <p className="text-gray-400">{capability.description}</p>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-400">Coverage Rate</span>
                      <span className="text-sm font-semibold text-white">{capability.coverage}%</span>
                    </div>
                    <Progress value={capability.coverage} className="h-2" />
                    <div className="space-y-2 pt-2 border-t border-surface-light">
                      {capability.features.map((feature, featureIndex) => (
                        <div key={featureIndex} className="flex items-center space-x-2">
                          <CheckCircle className="w-3 h-3 text-green-400 flex-shrink-0" />
                          <span className="text-gray-300 text-sm">{feature}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
      </div>
    </div>
  );
}